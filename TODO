class TodoList {
  constructor() {
    this.tasks = [];
  }
  
  addTask(task) {
    this.tasks.push(task);
  }
  
  removeTask(task) {
    const index = this.tasks.indexOf(task);
    if(index !== -1) {
      this.tasks.splice(index, 1);
    }
  }
  
  displayTasks() {
    console.log("Tasks:");
    this.tasks.forEach((task, index) => {
      console.log(`${index + 1}. ${task}`);
    });
  }
}

const myTodoList = new TodoList();
myTodoList.addTask("Complete homework");
myTodoList.addTask("Buy groceries");
myTodoList.addTask("Call mom");
myTodoList.displayTasks();
myTodoList.removeTask("Buy groceries");
myTodoList.displayTasks();

def dfs(graph, start, visited=None):
    if visited is None:
        visited = set()
    visited.add(start)
    for next_node in graph[start] - visited:
        dfs(graph, next_node, visited)
    return visited
